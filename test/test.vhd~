--------------------------------------------------------------------------------
-- Company: 
-- Engineer:
--
-- Create Date:   13:13:13 11/26/2013
-- Design Name:   
-- Module Name:   D:/Logiciel/Etude/Projets/Register_RX_TX/test.vhd
-- Project Name:  Register_RX_TX
-- Target Device:  
-- Tool versions:  
-- Description:   
-- 
-- VHDL Test Bench Created by ISE for module: TimeGen
-- 
-- Dependencies:
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Notes: 
-- This testbench has been automatically generated using types std_logic and
-- std_logic_vector for the ports of the unit under test.  Xilinx recommends
-- that these types always be used for the top-level I/O of a design in order
-- to guarantee that the testbench will bind correctly to the post-implementation 
-- simulation model.
--------------------------------------------------------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY test IS
END test;
 
ARCHITECTURE behavior OF test IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT TimeGen
    PORT(
         Clock_in : IN  std_logic;
         freq : IN  std_logic_vector (3 downto 0);
         Clock_out : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal Clock_in : std_logic := '0';
   signal freq : std_logic_vector (3 downto 0) := "0000";

 	--Outputs
   signal Clock_out : std_logic;

   -- Clock period definitions
   constant Clock_in_period : time := 10 ns;
   constant Clock_out_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: TimeGen PORT MAP (
          Clock_in => Clock_in,
          freq => freq,
          Clock_out => Clock_out
        );

   -- Clock process definitions
   process
   begin
		freq <= "0000" ;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		freq <= "0011" ; --*********
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		freq <= "0010" ;--***********
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
		Clock_in <= '0';
		wait for 20 NS;
		Clock_in <= '1';
		wait for 20 NS;
   end process;

END;
